1.3
- Emulated ps2 kernel can now be loaded by Sony PS2 linux.
- Get hard disc runnning, but without interrupts. Access is very slow.

1.2
- Fixed out of VRAM in NTSC mode.
- Added code for making screenshots. Code is unstable, so I deactivated it.

1.1
- Better graphical look and style of boot screen.
- Fixed error when switching mc directories to often.
- Autodetect memory card module version in SBIOS.
- Fixed problem that debug output was lost in eedebug.irx.
- Needed to move load address of kernelloader from 5 MB to ~4 MB,
  because kernel has problems with initrd loaded at a high address.
  Maximum kernel size is ~4 MB.
- Check ELF files for correct section location before startin. Can be
  deactivated in menu ("Enable IOP debug output").
- Print debug output on screen when kernelloader is started.
- Added USB keyboard support in kernelloader, you can select menu
  by using CURSOR KEYS and RETURN.
- Kernel parameter can be changed with USB keyboard.

1.0
- Added support for CDVD (Playstation CD and Playstation DVD can be read).
- Finished dmarelay.irx, I am unsure about the correctness of function
  read_thread() in the ATA part.
- Code for hard disc and network can be activated if ps2link is deactivated by
  configuration.
- Ethernet frames can be send, but not received.
- Hard disc is not yet working.
- Fixed bug in interrupt handling of SIF RPC.
- Add configuration switch for new and old ROM modules, CDVD is not working with
  new modules.
- Fixed cache aliasing problem in sifdma.c (sif1_dmatags).
- Added RPC printf debug support (using fileio.c).
- Print module initialisation messages from IOP on EE GS screen.
- Added menu system to kernelloader.

0.9
- Support for PAD.

0.8
- Support memory card in linux.
- Support USB in linux also when ps2link is loaded.

0.7
- SIFRPC is working with linux (but code is incomplete).
- iopheap RPC is working with linux (complete).
- Fixed interrupt handling.
- USB is working with linux when ps2link and the network modules are
  deactivated.
- Default configuration is a working USB linux.

0.6
- Get SIFRPC working in emulated ps2 kernel.
- Added support for negative syscalls (syscalls with first letter "i", which can
  be safely called in interrupt routines).
- Added support for semaphores in single thread environment including
  interrupts.
- Configured "Hello World!" as default example for emulated ps2 kernel.

0.5
- Added graphic support in loader using gsKit.
- Added configure option in config.mk for selecting SBIOS type RTE or TGE.
- Added script that can extract the sbios.bin from PS2 Linux DVD 1.
- Implemented some functions of the sifcmd level.
- Extended my example kernel to emulate real PS2 kernel.
- Simple examples using graphic are working with emulated PS2 kernel.
- Use PS2 tutorial demo as example.
- Use "hello world" demo as second example.
- Changed DOS line endings to linux line endings.
- Fixed setup of stack in example kernel.
- Flush TLBs in example kernel.
- Map memory in example kernel like real PS2.
- Rewritten cache flush and invalidate functions.
- Handle some PS2 syscalls in example kernel.
- Added map files for analysing SBIOS, RTE PS2 linux loader and PS2 kernel.
- Added some syscall to emulated PS2 kernel.
- Added handling of INTC and DMAC to emulated PS2 kernel.
- Added timer interrupt handling to emulated PS2 kernel.

0.4
- Use gsKit for graphic output.
- Use normal malloc() instead of mempool.

0.3
- Use higher load address (maximum kernel size is now 5 MB).
- Set mempool automatically to the end of the elf file.
- Disable RPC DMA channel before starting linux.
- Fix problem in exception handler that leads to random bus errors and page faults (at 0x80000204 must be a "nop" instruction).
- Setup some cp0 registers, just to be sure.

0.2
- Removed graphic support in loader.
- Added support to use iop printf over shared memory.
- Output is redireceted via ps2link.
- Modules loaded from host and iop is reset before starting kernel.
- Exception handler is installed by loader to handle errors while booting.

0.1
- First release, patch required for linux to handle exception at startup.
