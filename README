Kernelloader for ps2 Linux
##########################

This program can load a Linux kernel and start it. You need Linux kernel
2.4.17 for ps2 from the sony website. To build it you need a Linux host
and the PS2SDK. You also need to get a mips cross compiler. You can
download it here:

Linux 2.4.17_mvl21:
http://www.sony.net/Products/Linux/Download/PlayStation_BB_Navigator.html

Select Playstation 2 and download the following files:
kernel-headers-2.4.17_ps2-26.mipsel.rpm
kernel-source-2.4.17_ps2-26.mipsel.rpm

Toolchain:
https://playstation2-linux.com/files/ps2stuff/gcc-2.95.2-cross.tar.gz
https://playstation2-linux.com/files/ps2stuff/binutils-2.9EE-cross.tar.gz

initrd:
http://playstation2-linux.com/files/diskless/ps2boot-1.tar.gz

sh # su
sh # tar -xzf gcc-2.95.2-cross.tar.gz -C /usr/local
sh # tar -xzf binutils-2.9EE-cross.tar.gz -C /usr/local

Install it and change to kernel directory:

sh # rpm2cpio kernel-headers-2.4.17_ps2-26.mipsel.rpm | cpio -idmv
sh # rpm2cpio kernel-source-2.4.17_ps2-26.mipsel.rpm | cpio -idmv
sh # cd usr/src/linux-2.4.17_ps2

There is no patch required to start Linux.

The following patch is recommended to get initrd working:

sh # patch -p1 <../kernelloader/linux-2.4.17_ps2-initrd.patch

To get interrupts working on slim PSTwo (USB), you need this patch:

sh # patch -p1 <../kernelloader/linux-2.4.17_ps2-rpc-irq.patch

You can add support for printk over ps2link by patching Linux (system
start is slower):

sh # patch -p1 <../kernelloader/linux-2.4.17_ps2-printk.patch

Then set the toolchain:

sh # echo "/usr/local/ps2/bin/ee-" >.hhl_cross_compile-mips-r5900
sh # ./setup-ps2


Status: Kerneloader has a on screen menu. Debug information is
printed using ps2link, when it is enabled in config.mk. Kernel is starting,
most stuff is working including graphic, USB, hard disc and network.
Sound and some configuration stuff is not working. CD/DVD access is
unstable and incomplete.

INSTALL:
First you need to compile ps2smap and ps2link from ps2dev svn and copy the
modules "ps2smap.irx" and "ps2link.irx" to the directory "$PS2SDK/iop/irx/".
Then run make for a test (You should change the ip address in
"loader/Makefile" and in "loader/loader.c" variable "ifcfg"):

PS2SDK
######
To compile kernelloader you need PS2SDK, if you don't use it already
install it as follows:

sh # svn co svn://svn.ps2dev.org/ps2/trunk/ps2toolchain
sh # cd ps2toolchain
sh # chmod +x toolchain.sh
sh # ./toolchain.sh

USB
###
You need also to install the usb driver:

sh # svn co svn://svn.ps2dev.org/ps2/trunk/usb_mass
sh # cd usb_mass
sh # cd iop
sh # make
sh # cp usb_mass.irx /usr/local/ps2dev/ps2sdk/iop/irx

STL
###
STL is used and need to be installed:

sh # svn co svn://svn.ps2dev.org/ps2/trunk/ps2sdk-ports/stlport
sh # cd stlport
sh # make
sh # make install

ZLIB
####
ZLIB need to be installed:
sh # svn co svn://svn.ps2dev.org/ps2/trunk/ps2sdk-ports/zlib
sh # cd zlib
sh # make
sh # make install

PS2LINK
#######
If you want to debug something then you also need ps2link, but the
following steps are not required, when you don't activate it in
config.mk.

sh # svn co svn://svn.ps2dev.org/ps2/trunk/ps2eth
sh # cd ps2eth
sh # make
sh # cp smap/ps2smap.irx /usr/local/ps2dev/ps2sdk/iop/irx/
sh # cd ..
sh # svn co svn://svn.ps2dev.org/ps2/trunk/ps2link
sh # cd ps2link
sh # make
sh # cp iop/ps2link.irx /usr/local/ps2dev/ps2sdk/iop/irx/

To further compile someting for PS2SDK, you need to setup the environment:
export PS2DEV="/usr/local/ps2dev"
export PS2SDK="$PS2DEV/ps2sdk"
export PS2LIB="$PS2SDK"
export PATH="${PS2DEV}/bin:${PS2DEV}/ee/bin:${PS2DEV}/iop/bin:${PS2DEV}/dvp/bin:${PS2DEV}/ps2sdk/bin:$PATH"

You need also to set up where your source code is:
export PS2_SRC_PREFIX=$HOME/ps2src
You need to adjust it to your prefered path.
export PS2SDKSRC="${PS2_SRC_PREFIX}/ps2sdk"
export GSKITSRC="${PS2_SRC_PREFIX}/gsKit"
export LIBTIFF="${PS2_SRC_PREFIX}/libtiff"
export LIBJPG="${PS2_SRC_PREFIX}/libjpg/libjpg"
export PS2ETH="${PS2_SRC_PREFIX}/ps2eth"

GSKIT
#####
The graphic library is used for displaying everything. You need to install it:
sh # cd $PS2SDKSRC
sh # svn co svn://svn.ps2dev.org/ps2/trunk/gsKit
sh # cd gsKit
sh # make
sh # make install

SJCRUNCH
########
sjcrunch is a packer for PS2 elf files. This is required to get smaller
file size and to get a version which can be booted by Action Replay
Media Player. You need to download it from:

http://www.ps2dev.org

sh # cd $PS2SDKSRC
sh # mkdir sjcrunch
sh # cd sjcrunch
sh # unzip sjcrunch-2.1.zip
sh # cd pc
sh # make
sh # cd ..
sh # cp pc/sjcrunch_packer script
sh # sed <sjcrunch -e s-SJCRUNCH_PATH=.*-SJCRUNCH_PATH=$(pwd)- -e s-SJCRUNCH_PACKER=.*-SJCRUNCH_PACKER=\$SJCRUNCH_PATH/sjcrunch_packer- >/usr/local/ps2dev/ps2sdk/bin/sjcrunch
sh # chmod +x /usr/local/ps2dev/ps2sdk/bin/sjcrunch

Kernelloader
############
To compile kernelloader you need some additional libraries on your host:

- libpng

You need to check that you have the development package installed (on debian suffix "-dev", on SuSe "devel")

Now you can go back to kernelloader for a test:

sh # make

The following test will upload the elf file using ps2link. ps2link must
be started on the PS2. You can also use your prefered upload method. The
elf file "kloader.elf" can also be started by AR Max Media Player. You need
just to copy it on a USB memory stick.

sh # make test

A menu will start and you can select the first menu entry by pressing the
CROSS button on the first pad.
You should see the output of example kernel on screen. The kernel
tries to emulate the original PS2 kernel and start a graphic demo. SIFRPC
is working correctly in this kernel. All IOP hardware should work. Only
single thread and a interrupt handler is supported.

Linux
#####
Now you should compile the Linux kernel. Run menu config and deactivate
old bootinfo support.

sh # make menuconfig

For initrd support:
Deactivate "Machine selection"  ---> "Support for old style boot information"
Activate "Machine selection"  ---> "Support for PS2 Memory Card File System" (choose "*" and not "M")
Activate "Block devices" ---> "RAM disk support" (choose "*" and not "M")
Activate "Block devices" ---> "Initial RAM disk (initrd) support"
Activate "File systems" ---> "ISO 9660 CDROM file system support" (choose "*" and not "M")
Activate "File systems" ---> "Second extended fs support" (choose "*" and not "M")

Save configuration and then run:

sh # make dep
sh # make

You should strip it, to reduce loading time and to prevent out of memory errors (less than 12MB available).
sh # /usr/local/ps2/bin/ee-strip vmlinux

You need to copy the file "linux-2.4.17_ps2/vmlinux" on a ps2 memroy card
or a USB memroy stick and insert it into your PS2.

Initrd
######
The initrd includes the Linux file system. This required for installing
Linux.

Make an "initrd.gz":

Extract "ps2boot-1.tar.gz" as root user.

Generate "initrd.gz" as root user.

sh # ./mkbootcd.sh

Then copy "initrd.gz" to "kernelloader/loader".

sh # cp initrd.gz ../kernelloader/loader/

Kernelloader
############
Go back to kernelloader dir and run make test again.

sh # make test

Maximum size of kernel is ~4 MB.
The loader sets maximum "initrd.gz" decompressed size to 16 MB (using
"ramdisk_size=16384").
The Linux kernel should start. USB keyboard is working. You can also
load the kernel from a memory card or a USB memory stick. You can select
the file in the menu in the kernelloader on the PS2 using the first pad.

Remarks:
########

You can select the SBIOS type "TGE" or "RTE" if you have DISC 1 from Sony's
Linux (for PlayStation 2) Release 1.0. To start Linux this is not required.
TGE is not finished and it is possible that "RTE" is running more stable.
Then you need to put in the original PS2 Linux DVD DISC 1 and adjust the
path in config.mk. The SBIOS will be automatically extracted. Linux will
only start with this version when you change the configuration accordingly:

When kernelloader is started you need to do the following:
1. Uncheck "Enable TGE (disable RTE)" in "Configuration Menu".
2. Execute "Submit above config" in "Configuration Menu".
3. Uncheck "Use SBIOS from TGE (ow RTE)".
4. Uncheck all CDVD entries in "Enabled SBIOS Calls" menu which is
located in "Configuration Menu" (entries 176 to 195).

With this configuration USB keyboard seems only to work when it is not
plugged in at startup.

USB is only working when ps2link modules are not loaded (see "Configuration Menu").
It is also possible to select new ROM modules instead of old ones.

CDVD calls should also be disabled when using TGE, because of some Linux
kernel exceptions.

Files with prefix "host:" a first searched in a kloader.elf embedded
files system.

Module Information
##################

You can select which IOP modules are loaded in kernelloader. Module names
prefixed with "rom0:X" are the new rom modules. Module names without the
"X" are the old ones. Each playstation has the same version of the old modules.
ps2link is only for debugging. It's purpose in this project is to print debug
messages over network. The messages can be seen on the host using ps2client.
The new modules can be different. Here is more information about the modules:

eedebug.irx
Required: No
Patch: linux-2.4.17_ps2-iop-debug.patch
Module send all output of IOP processor to host. Linux patch is required
to see this information at "/proc/ps2iopdebug".

SIO2MAN
XSIO2MAN
Required: Yes
System module. Required to start other modules.

MCMAN
XMCMAN
Required: Yes, or accessing memroy cards.
Access to PS2 memory cards on IOP.

MCSERV
XMCSERV
Required: Yes, or accessing memroy cards.
RPC server for MCMAN. Linux will call the RPC server.

PADMAN
XPADMAN
Required: Yes, for accessing playstation game controllers.
Driver and RPC server to access gamecontrollers by EE.

iomanX.irx
Required: No, only for ps2link.
File IO driver on IOP.

poweroff.irx
Required: No, only for ps2link.
To get poweroff button working when hard disc is used (DEV9, ps2link).

ps2dev9.irx
Required: No, only for ps2link.
Driver for DEV9 (hardware interface to expansion bay or PCMCIA).
Grants access to network and hard disc.

ps2ip.irx
Reuqired: No, only for ps2link.
TCP/IP network stack on IOP processor.

ps2smap.irx
Required: No, only for ps2link.
Network driver on IOP processor. Linux has it's own driver. When
this driver is used and Linux driver is activated. Linux driver will
deactivate this one. When IOP tries to use the network the system will hang.

ps2link.irx
Required: No, only for ps2link.
ps2link is a IOP module which helps debugging.

sharedmem.irx
Required: No, only for ps2link or if you applied the patch.
Patch: linux-2.4.17_ps2-printk.patch
This module is only for debugging and is easier than the RPC interface. Its
purpose is to get a easy way to print messages on EE. If you applied the patch
Linux will only start if you load the module.

iopintr.irx
intrelay-direct.irx
intrelay-dev9.irx
Required: Yes
Redirects interrupts from IOP to EE.
You need only one module. The normal module is "intrelay-direct.irx". If you
use ps2link or ps2dev9 you need to load "intrelay-dev9.irx". System can hang if
you try to use network from IOP and EE!

dmarelay.irx
Required: No
Redirects DMA from EE to IOP and backwards. There is no Linux driver using it
correctly. Its purpose is to speed up network and hard disc.

CDVDMAN
XCDVDMAN
Required: Yes
Reading CDs and DVDs.

CDVDFSV
XCDVDFSV
Required: No
I believe it is not required by Linux.

ADDRV
Required: Yes, for reading video DVDs.
Enables access to rom1.

eromdrvloader
EROMDRV
Required: Yes, for reading video DVDs.
Need to be loaded to read video DVDs.
